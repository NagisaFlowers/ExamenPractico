name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout código
      uses: actions/checkout@v4

    - name: Configurar Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Instalar dependencias
      run: |
        pip install -r requirements.txt

    - name: Ejecutar tests básicos
      run: |
        python -c "import flask; print('Flask instalado correctamente')"
        python -c "from app import app; print('Aplicación Flask importada correctamente')"

  build:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout código
      uses: actions/checkout@v4

    - name: Build imagen Docker
      run: |
        docker build -t devops-app:latest .

    - name: Tag imagen con SHA
      run: |
        docker tag devops-app:latest devops-app:${{ github.sha }}

  deploy-simulation:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: 🚀 Despliegue simulado
      run: |
        echo "Iniciando despliegue de la aplicación..."
        echo "Versión: ${{ github.sha }}"
        echo "Fecha: $(date)"
        echo "Despliegue simulado completado exitosamente"

  rollback-simulation:
    runs-on: ubuntu-latest
    if: failure() && github.ref == 'refs/heads/main'
    
    steps:
    - name: rollback simulado
      run: |
        echo "ROLLBACK INICIADO"
        echo "Error detectado en el pipeline"
        echo "Revertiendo a versión estable anterior"
        echo "Rollback completado exitosamente"

#Automatizacion de infraestructura digital II
#Prof. FROYLAN ALONSO PEREZ ALANIS
# GRAU MORENO MANUEL  - 220550