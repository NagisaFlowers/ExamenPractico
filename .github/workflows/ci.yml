name: DevOps CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Ejecutar Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout código
      uses: actions/checkout@v3
    
    - name: Configurar Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Instalar dependencias
      run:
        cd app
        pip install -r requirements.txt
        pip install pytest pytest-flask
    
    - name: Ejecutar tests
      run:
        cd app
        python -c "import flask; print('Flask importado correctamente')"
        python -c "from app import app; print('Aplicación Flask cargada')"
    
    - name: Security Scan (SAST)
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: app/

  build:
    name: Construir y Publicar
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout código
      uses: actions/checkout@v3
    
    - name: Construir imagen Docker
      run: |
        docker build -t proyecto-devops:${{ github.sha }} .
        docker build -t proyecto-devops:latest .
    
    - name: Test de contenedor
      run: |
        docker run -d --name test-container -p 5001:5000 proyecto-devops:latest
        sleep 15
        
        # Health check
        curl -f http://localhost:5001/health || exit 1
        docker stop test-container
        docker rm test-container
    
    - name: Simular error (Rollback test)
      run: |
        echo "Simulando falla en el despliegue..."
        # Esto fallará intencionalmente para demostrar rollback
        docker run --rm alpine sh -c "exit 1" || echo "Error simulado - Listo para rollback"
    
  deploy:
    name: Despliegue
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Log de despliegue
      run: |
        echo "Despliegue simulado exitoso"
        echo "Aplicación: proyecto-devops"
        echo "Versión: ${{ github.sha }}"
        echo "Entorno: Production"
        echo "Fecha: $(date)"

#Automatizacion de infraestructura digital II
#Prof. FROYLAN ALONSO PEREZ ALANIS
# GRAU MORENO MANUEL  - 220550